#!/usr/bin/env bash

SCRIPTNAME=$(basename "${0}")

LOGICAL_CORES=$([ $(uname) = 'Darwin' ] && sysctl -n hw.logicalcpu_max || lscpu -p | egrep -v '^#' | wc -l)

# Print Usage
function usage() {
	echo "Usage: ${SCRIPTNAME} <url> [<filename>]"
}

# Print usage if first argument is --help or if it's empty
if [ "${1}" == "--help" ]; then
	usage
	exit 0
elif [[ -z "${1}" ]]; then
	usage
	exit 1
fi

# Write first argument to the URL variable
URL=${1}

# Check if a second argument is given
if [[ -z "${2}" ]]; then
	# If not set FILENAME to default and go to the Downloads folder
	FILENAME="videodl-0.mp4"
	cd ~/Downloads
elif [[ "${2}" == *.mp4 ]]; then
	# If it is a mp4 file set FILENAME to the given filename
	FILENAME="${2}"
else
	# If it is not a mp4 file set FILENAME to the given filename with .mp4 extension
	FILENAME="${2}.mp4"
fi

# Check if the file already exists and if the second argument is not set
if [[ -f ${FILENAME} ]] && [[ -z "${2}" ]]; then
	# If it does increment the number in the filename until it is unique
	while [[ -f ${FILENAME} ]]; do
		# Remove .mp4 extension because it contains a number
		FILENAME=${FILENAME%.mp4}
		# Get the number from the filename
		FILENAME=${FILENAME//[!0-9]/}
		# Create a new filename with the incremented number
		FILENAME="videodl-$((${FILENAME}+1)).mp4"
	done
fi

# Print where the file will be saved
if [[ -z "${2}" ]]; then
	echo "Downloading \"${URL}\" to \"~/Downloads/${FILENAME}\""
else
	echo "Downloading \"${URL}\" to \"${FILENAME}\""
fi

# Download the html file and use a regex to search for the hls source (group 1 is the hls source)
REVERSED_JSON=$(curl -Ls "${URL}" | rg -oe "let [a-zA-Z0-9]+ = '([^']+)';" -r '$1' | base64 --decode)
for ((i=${#REVERSED_JSON}-1;i>=0;i--)); do
	JSON="${JSON}${REVERSED_JSON:${i}:1}"
done
SOURCE=$(echo ${JSON} | rg -oe '"file":"([^"]+)"' -r '$1' | sed -r 's/\\\//\//g')

yt-dlp "${SOURCE}" -o "${FILENAME}" --continue --no-part --concurrent-fragments ${LOGICAL_CORES}
